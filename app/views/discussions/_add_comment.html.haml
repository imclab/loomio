- if can? :add_comment, discussion
  = form_tag add_comment_discussion_path(discussion), :remote => true, id: "new-comment-form" do
    = render 'avatar', user: current_user, size: "medium", kind: nil, id: nil
    #comment-input{ data: {group: @group.id} }
      .form-container
        = text_area_tag 'comment', "", id: 'new-comment', placeholder: t(:comment_form_placeholder)
        #attachment-container
          .attachments
          .attachment-uploader
            .uploading-filename
              filename
            %button.close &times;
            .progress.active
              .bar
            .attachment-too-large-error-message.hidden=t(:"attachment.error.too_large")
      = hidden_field_tag 'uses_markdown', @uses_markdown, {id: 'global-uses-markdown'}
      = submit_tag t(:comment_form_submit_button), class: "btn btn-small submit", id: 'post-new-comment', :data => {:disable_with => t(:comment_form_submit_button)}
    .comment-toolbar
      .attachment-icon#upload-attachment
      .dropdown#comment-markdown-dropdown.global-markdown-setting
        %a.dropdown-toggle{href:'#comment-markdown-dropdown', id:'comment-markdown-dropdown-link', 'data-toggle'=> 'dropdown'}
          = markdown_img(@uses_markdown)
        = render 'markdown_setting', target: current_user

  %form(action="https://#{ENV['S3_BUCKET']}.s3.amazonaws.com" method="post" enctype="multipart/form-data" class='direct-upload')
    =hidden_field_tag :key
    =hidden_field_tag :AWSAccessKeyId, ENV['AWS_ACCESS_KEY_ID']
    =hidden_field_tag :acl, 'public-read'
    =hidden_field_tag :policy
    =hidden_field_tag :signature
    =hidden_field_tag :success_action_status, '201'
    =hidden_field_tag :"Content-Type", "*"
    %input#file-upload-field{type: :file, name: :file}
